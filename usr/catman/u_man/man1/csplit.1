CSPLIT(1)						CSPLIT(1)

NAME
     csplit - Splits a file (context split)

SYNOPSIS
     csplit -fks file arg1 [... argn]

DESCRIPTION
   Purpose
     The csplit command reads file and separates it into n+1
     sections, defined by the arguments arg1...  argn.	The
     standard input is used if file is -.

     By default the sections are placed in xx00 ...  xxn; n may
     not be greater than 99.  These sections get the following
     pieces of file:
     00:  From the start of file up to (but not including) the
	  line referenced by arg1.
     01:  From the line referenced by arg1 up to the line
	  referenced by arg2.
     .
     .
     .
     n+1: From the line referenced by argn to the end of file.

   Options
     -f pre
	  You must specify a value, pre, if you use this option.
	  The value is a file name prefix such that the created
	  files are named pre00 ... pren.  The default is xx00
	  ...  xxn.  The file name prefix must be separated from
	  the option with a space.

     -k   The command normally removes created files if an error
	  occurs.  If the -k option is present, csplit leaves
	  previously created files intact.

     -s   The command normally prints the character counts for
	  each file created.  If the -s option is present, csplit
	  suppresses the printing of all character counts.

   Arguments
     The arguments (arg1 ...  argn) to csplit can be a
     combination of the following:

     /rexp/
	  A file is to be created for the section from the
	  current line up to (but not including) the line
	  containing the regular expression rexp.  The current
	  line becomes the line containing rexp.  This argument
	  may be followed by an optional + or - some number of
	  lines; do not enter spaces before or after the + or -
	  (e.g., /Page/-5 is an example of a correct argument).

     %rexp%
	  This argument is the same as /rexp/ except that no file
	  is created for the section.

     lnno
	  A file is to be created from the current line up to
	  (but not including) lnno.  The current line becomes
	  lnno.

     {num}
	  Repeat argument.  This argument may follow any of the
	  above arguments.  If it follows a rexp type argument,
	  that argument is applied num more times.  If it follows
	  lnno, the file will be split every lnno lines (num
	  times) from that point.  Braces are special characters
	  to the shell, so they must be escaped with a \.

	  Each line within the files must be less than 256
	  characters long.  Enclose all rexp type arguments that
	  contain blanks or other characters meaningful to the
	  shell in the appropriate quotes.  Regular expressions
	  may not contain embedded newlines.  The csplit command
	  does not affect the original file; it is the user's
	  responsibility to remove the original file.

EXAMPLES
	  csplit -f cobol file '/procedure division/' /par5./ /par16./

     This example command creates four files, cobol00 ...
     cobol03.  After the split files have been edited, they can
     be recombined as follows:

	  cat cobol0[0-3] > file

     Note that this example overwrites the original file.

	  csplit -k file 100 \{99\}

     This example splits the file at every 100 lines, up to
     10,000 lines.  The -k option causes the created files to be
     retained if there are less than 10,000 lines; however, an
     error message is still printed.

	  csplit -k prog.c '%main(%' '/^}/+1' \{20\}

     Assuming that prog.c follows the normal C coding convention
     of ending routines with a } at the beginning of the line,
     this example creates a file containing each separate C
     routine (up to 21) in prog.c.

SEE ALSO
     ed(1), sh(1), regexp(5).

DIAGNOSTICS
     Self-explanatory except for the following, which means that
     the given argument did not reference a line between the
     current position and the end of the file:
	  arg - out of range

     If the `{}' is too large, an out-of-range error may be
     printed.


