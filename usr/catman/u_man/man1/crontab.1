CRONTAB(1)					       CRONTAB(1)

NAME
     crontab - Submits, replaces, or removes a user crontab file

SYNOPSIS
     crontab file
     crontab -r
     crontab -l

DESCRIPTION
   Purpose
     The crontab command copies the specified file, or standard
     input if no file is specified, into a directory that holds
     all users' crontabs.  The -r option removes a user's crontab
     from the crontab directory.  The -l option lists the crontab
     file for the invoking user.

     Note that because crontab copies the specified file, an
     existing crontab file of the same name as file is
     overwritten.

   crontab Files
     Users are permitted to use crontab if their names appear in
     the file /usr/lib/cron/cron.allow.  If that file does not
     exist, the file /usr/lib/cron/cron.deny is checked to
     determine if the user should be denied access to crontab. If
     neither file exists, only root is allowed to submit a job.
     If cron.allow does not exist and cron.deny exists but is
     empty, global usage is permitted.	The allow/deny files
     consist of one user name per line.

     A crontab file consists of lines of six fields each.  The
     fields are separated by spaces or tabs.  The first five are
     integer patterns that specify the following:

     minute (0-59),
     hour (0-23),
     day of the month (1-31),
     month of the year (1-12),
     day of the week (0-6 with 0=Sunday).

     Each of these patterns can be either an asterisk  (meaning
     all legal values) or a list of elements separated by commas.
     An element is either a number or two numbers separated by a
     minus sign (meaning an inclusive range).  Note that the
     specification of days can be made by two fields (day of the
     month and day of the week).  If both are specified as a list
     of elements, both are adhered to.	For example, 0 0 1,15 * 1
     would run a command on the first and fifteenth of each
     month, as well as on every Monday.  To specify days by only
     one field, the other field should be set to * (for example,
     0 0 * * 1 would run a command only on Mondays).

     The sixth field of a line in a crontab file is a string that
     is executed by the shell at the specified times.  A percent
     character in this field (unless escaped by \) is translated
     to a new-line character.  Only the first line (up to a % or
     end of line) of the command field is executed by the shell.
     The other lines are made available to the command as
     standard input.

     The shell is invoked from your $HOME directory with an arg0
     of sh.  Users who desire to have their .profile executed
     must explicitly do so in the crontab file.  The cron command
     supplies a default environment for every shell, defining
     HOME, LOGNAME, SHELL(=/bin/sh), and PATH(=:/bin:/usr/bin:/usr/lbin).

     The following environment variables will be supplied if they
     are defined in /etc/profile when cron is started:

     DATE See ctime(3C) and calendar(1).

     LANG See mkmsg(1) and environ(5).

     TZ   See environ(5).

     NOTE:  Users should remember to redirect the standard output
     and standard error of their commands!  If this is not done,
     any generated output or errors will be mailed to the user.

PROMPTS
   File Name:
     Enter the user crontab file name to be added to or removed
     from /usr/lib/cron.

   Remove File:
     Enter yes to remove the specified file from /usr/lib/cron.

   List Crontab File:
     Enter yes to print the specified crontab file.

FILES
     /usr/lib/cron		     Main cron directory
     /usr/spool/cron/crontabs	     Directory for user crontab files
     /usr/lib/cron/log		     Log file
     /usr/lib/cron/cron.allow	     List of allowed users (if it exists)
     /usr/lib/cron/cron.deny	     List of denied users (shipped empty)

SEE ALSO
     cron(1M), sh(1).

NOTES
     Commands such as write(1) that try to determine the tty name
     of standard input may exhibit strange behavior when run by
     batch.

     The file /usr/lib/cron/cron.allow is not shipped with the
     system.  The owner of the files /usr/lib/cron/cron.allow and
     /usr/lib/cron/cron.deny must be root, the group sys, and the
     mode 644.

WARNINGS
     If you inadvertently enter the crontab command with no
     argument(s), do not attempt to get out with the Control-d
     key sequence.  This will cause all entries in your crontab
     file to be removed. Instead, exit with the Delete key.


