DIFF(1)                                                   DIFF(1)

NAME
     diff - Compares two files

SYNOPSIS
     diff -befh file1 file2

DESCRIPTION
   Purpose
     The diff program tells which lines must be changed in two
     files to make them identical.

   Options
     -b   Causes the program to ignore trailing blanks (spaces
          and tabs) and to consider other strings of blanks as
          equal.

     -e   Produces a script of a, c and d commands for the editor
          ed, which can be used to recreate file2 from file1.
          Options -e and -f cannot be used together.

     -f   Produces a script similar to that produced by -e but
          not useful with ed.  This script can be used to
          recreate file2 from file1.

     -h   Causes diff to execute quickly but works only when
          changes are short and well-separated.  This option
          works on files of unlimited length.  Options -e and -f
          are unavailable with -h.

   Discussion
     If the file argument is -, the standard input is used.  If
     file1 (file2) is a directory, then a file in that directory
     with the name file2 (file1) is used.  The normal output
     contains lines of the following forms:
     n1 a n3,n4
     n1,n2 d n3
     n1,n2 c

     These lines resemble ed commands to convert file1 into
     file2.  The numbers after the letters pertain to file2.  In
     fact, by exchanging a for d and reading backward, one may
     ascertain equally how to convert file2 into file1.  As in
     ed, identical pairs where n1 = n2 or n3 = n4 are abbreviated
     as a single number.

     Following each of these lines come all the lines that are
     affected in the first file flagged by <, then all the lines
     that are affected in the second file flagged by >.

EXAMPLES
     The following example produces a script of ed commands that
     can be used to recreate filey from filex, if differences
     exist between the two files.

          diff -e filex filey

     In connection with the -e option, the following shell
     program may help maintain multiple versions of a file.  Only
     an ancestral file ($1) and a chain of version-to-version ed
     scripts ($2,$3,...) made by diff need be on hand.  A
     ``latest version'' appears on the standard output.

          (shift; cat $*; echo '1,$p') | ed - $1

     Except in rare circumstances, diff finds a smallest
     sufficient set of file differences.

PROMPTS
   File 1:
     The name of a file to compare.

   File 2:
     The name of a file to compare to file 1.

   Output File Name:
     Response to this prompt is optional.  Enter a file name to
     receive the output of the command.

   Huge Files:
     Enter yes if only short and well-separated changes are
     necessary to make file 1 and file 2 identical.  This
     response causes diff to execute quickly.

   Ignore Trailing Blanks:
     Initial value is no. Enter yes to cause trailing blanks
     (spaces and tabs) to be ignored and other strings of blanks
     to compare equal.

   Produce Script for Editor:
     Initial value is no.  Enter yes to produce a script ed
     commands which can be used to recreate file 2 from file 1.

   Produce Script for Reproduction:
     Initial value is no.  Enter yes to produce a script similar
     to that produced by prompt above, but not useful with ed.
     This script can be used to recreate file 1 from file 2.

FILES
     /tmp/d?????
     /bin/diffh     For the -h option

SEE ALSO
     cmp(1), comm(1), ed(1).

DIAGNOSTICS
     Exit status is 0 for no differences, 1 for some differences,
     2 for trouble.

NOTES
     Editing scripts produced under the -e or -f option are naive
     about creating lines consisting of a single period (.).

     The following message indicates that the last line of file X
     did not have a newline:

          Missing newline at end of file X

     If the lines are different, they will be flagged and output
     although the output will seem to indicate they are the same.


