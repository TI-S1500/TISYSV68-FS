YACC(1) 						  YACC(1)

NAME
     yacc - Aids user in generating parsers (yet another
     compiler-compiler)

SYNOPSIS
     yacc -vdlt grammar

DESCRIPTION
   Purpose
     The yacc program converts a context-free grammar into a set
     of tables for a simple automaton that executes a LR(1)
     parsing algorithm.  If the grammar is ambiguous, specified
     precedence rules can be used to break ambiguities.

   Options
     -v   The file named y.output is prepared.	This file
	  contains a description of the parsing tables and a
	  report on conflicts generated by ambiguities in
	  grammar.

     -d   The file named y.tab.h is generated with the #define
	  statements that associate the yacc-assigned token codes
	  with the user-declared token names.  This file allows
	  source files other than y.tab.c to access the token
	  codes.

     -l   The code produced in y.tab.c does not contain any #line
	  constructs. This option should be used only after the
	  grammar and the associated actions are fully debugged.

     -t   Runtime debugging code is always generated in y.tab.c
	  under conditional compilation control.  By default,
	  this code is not included when y.tab.c is compiled.
	  However, when the -t option of yacc is used, this
	  debugging code is compiled by default.  Independent of
	  whether the -t option is used, the runtime debugging
	  code is under the control of YYDEBUG, a preprocessor
	  symbol.  If YYDEBUG has a nonzero value, then the
	  debugging code is included.  If its value is zero, then
	  the code is not included.  Program size is smaller and
	  execution time is slightly faster when a program is
	  produced without the runtime debugging code.

   Discussion
     The output file, y.tab.c, must be compiled by the C compiler
     to produce a program yyparse.  This program must be loaded
     with the lexical analyzer program, yylex, as well as main
     and yyerror, an error handling routine.  These routines must
     be supplied by the user; lex(1) is useful for creating
     lexical analyzers usable by yacc.

FILES
     y.output
     y.tab.c
     y.tab.h		  Definitions for token names
     yacc.tmp		  Temporary file
     yacc.debug 	  Temporary file
     yacc.acts		  Temporary file
     /usr/lib/yaccpar	  Parser prototype for C programs

PROMPTS
   Prepare y.output:
     Initial value is no.  If you enter yes, the file named
     y.output is prepared.  This file contains a description of
     the parsing tables and a report on conflicts generated by
     ambiguities in grammar.

   Generate y.tab.h:
     Initial value is no.  If you enter yes, the file named
     y.tab.h is generated with #define statements.

   Generate Runtime Code:
     Initial value is no.  If you enter yes, the runtime
     degugging code is generated.

   Line Constructs in y.tab.c:
     Initial value is no.  If you enter yes, the code produced
     does not contain any #line constructs.

   Grammar:
     Response to this prompt is optional.  Enter the grammar to
     be converted.

SEE ALSO
     lex(1).
     ``Yet Another Compiler-Compiler'' in the TI System V Support
     Tools Guide.

DIAGNOSTICS
     The number of reduce-reduce and shift-reduce conflicts is
     reported on the standard error output; a more detailed
     report is found in the y.output file.  Similarly, rules not
     reachable from the start symbol are reported.

NOTES
     Because file names are fixed, only one yacc process can be
     active in a given directory at any time.


